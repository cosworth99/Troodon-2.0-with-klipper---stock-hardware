
#####################################################################
#   Macros
#####################################################################

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    NOZZLE_CLEAN
    G28
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##  Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    ##  Uncomment for 350mm build
    G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 40, 40
mesh_max: 310, 310
probe_count: 5, 5 # Values should be odd, so one point is directly at bed center
fade_start: 0.2
fade_end: 10.0
algorithm: bicubic



#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
[gcode_macro PRINT_START]
gcode:
    G32                            ; home all axes
    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed
    BED_MESH_PROFILE LOAD=default
    NOZZLE_PRIME
   

#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

#####
# COLOR CHANGE
#####

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

#=====================================================
# RESUME
#=====================================================
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}


#####
# FILAMENT MANAGEMENT
#####

[gcode_macro UNLOAD_FILAMENT]
description: Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode:
  SAVE_GCODE_STATE NAME=unload_state
  G91
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
    M117 Heating...
    # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
    M104 S{params.TEMP|default(220, true)}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
  {% endif %}
  M117 Unloading filament...
  # Extract filament to cold end area 
  G0 E-5 F3600
  # Wait for three seconds
  G4 P3000
  # Push back the filament to smash any stringing 
  G0 E5 F3600
  # Extract back fast in to the cold zone 
  G0 E-15 F3600
  # Continue extraction slowly, allow the filament time to cool solid before it reaches the gears       
  G0 E-130 F300
  M117 Filament unloaded!
  RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
  RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description: Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode:
  SAVE_GCODE_STATE NAME=load_state
  G91
  # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
    M117 Heating...
    M104 S{params.TEMP|default(220, true)}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
  {% endif %}
  M117 Loading filament...
  # Load the filament into the hotend area.
  G0 E100 F600
  # Wait a secod
  G4 P1000
  # Purge
  G0 E40 F100
  # Wait for purge to complete
  M400e
  M117 Filament loaded!
  RESPOND MSG="Filament loaded!"
  RESTORE_GCODE_STATE NAME=load_state

[gcode_macro NOZZLE_CLEAN]
description: wipes nozzle on brush to clean it
gcode:
  G90
  G1 X265 Y350 F6000
  G1 Z0.5 F3000
  G1 X305 Y350 F10000
  G1 X265 Y350 F10000
  G1 X305 Y350 F10000
  G1 X265 Y350 F10000
  G1 X305 Y350 F10000
  G1 X265 Y350 F10000
  G1 Z10 F6000

[gcode_macro NOZZLE_PRIME]
description: prime the nozzle before printing
gcode:
  G92 E0
  G1 E-3 F1800
  G1 X0 Y0 F10000
  G1 Z0.3 F500
  G92 E0
  G1 E3 F500
  G90
  G1 E-0.30000 F3600
  G1 Z0.2500 F1000
  G1 X330 Y0 E50 F1000 
  G92 E0
  G1 E-0.30000 F5400
  G1 Z10 F500

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 10.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro RESONANCES_TEST]
description: Run input shaper test
gcode:
  {% set user = printer['gcode_macro _USER_VARIABLE'] %}
  _CG28                                                 ; home if needed
  TURN_OFF_HEATERS                                      ; turn off heaters
  M107                                                  ; turn off fan
  {% if user.hw.chamber.fan %} M141 {% endif %}         ; exhaust fan off
  {% if user.hw.filter.ena %} _SET_FILTER {% endif %}   ; filter off
  _PRINT_AR T="INPUT SHAPER: Noise values, check if sensor is installed"
  MEASURE_AXES_NOISE                                    ; get noise value in log
  _PRINT_AR T="INPUT SHAPER: Resonance Tests starting"
  _PRINT_AR T="INPUT SHAPER: Mesasure X axis"
  TEST_RESONANCES AXIS=X                                ; measure X
  _PRINT_AR T="INPUT SHAPER: Mesasure Y axis"
  TEST_RESONANCES AXIS=Y                                ; measure Y
  _PRINT_AR T="INPUT SHAPER: Resonance Tests done"
  _PRINT_AR T="INPUT SHAPER: Generate graph in backround"
  RUN_SHELL_COMMAND CMD=plot_graph PARAMS=SHAPER


#=====================================================
# BUILD THE BED MESH
#=====================================================
# G29 that does (1) home all (2) get bed mesh (3) move 
# nozzle to corner so it doesnt ooze on the bed while heating up.
[gcode_macro LEVEL_BED]
gcode:
    G28
    BED_MESH_CALIBRATE
    G0 X350 Y350 Z15 F4000
    BED_MESH_PROFILE save=default1

#=====================================================
# SET Z ENDSTOP OFFSET
#=====================================================

[gcode_macro SET_Z_OFFSET]
 gcode:
     G28
     G1 X180 Y180 Z10 F5000
     Z_ENDSTOP_CALIBRATE



#=====================================================
# SENSOR PROBE QUERY
#=====================================================
[delayed_gcode EQUERY]
#
# EQUERY
#
# Continuously polls the endstop state until stopped
#
gcode:
    query_endstops
    query_probe
    UPDATE_DELAYED_GCODE ID=EQUERY DURATION=1.5

[gcode_macro START_EQUERY]
description: Print the endstop state to the console until you call STOP_QUERY
gcode:
    update_delayed_gcode id=EQUERY DURATION=1

[gcode_macro STOP_EQUERY]
description: Stop reporting the endstop state to the console
gcode:
    update_delayed_gcode id=EQUERY DURATION=0

#=====================================================
# MOVE Z UP AFTER FAILED PRINT
#=====================================================
[gcode_macro Z_OVERRIDE]
gcode:
  SET_KINEMATIC_POSITION Z=10



#=====================================================
# DO THE HUSTLE
#=====================================================
#series of commands to move printhead around at 300mm/sec to test steppers or frequency generation

[gcode_macro DO_THE_HUSTLE]
gcode:
  G28
  G91
  G1 Z+25 F1500
  G90
  
  G1 X5 F18000
  G1 Y5 F18000
  G1 X345 F18000
  G1 Y345.00 F18000

  G1 X5 F18000
  G1 Y5 F18000
  G1 X345 F18000
  G1 Y345.00 F18000

  G1 X50 F18000
  G1 Y50 F18000
  G1 X295 F18000
  G1 Y295.00 F18000

  G1 X50 F18000
  G1 Y50 F18000
  G1 X295 F18000
  G1 Y295.00 F18000

  G1 X100 F18000
  G1 Y100 F18000
  G1 X250 F18000
  G1 Y250.00 F18000

  G1 X100 F18000
  G1 Y100 F18000
  G1 X250 F18000
  G1 Y250.00 F18000

  G1 X150 F18000
  G1 Y150 F18000
  G1 X200 F18000
  G1 Y200.00 F18000

  G1 X150 F18000
  G1 Y150 F18000
  G1 X200 F18000
  G1 Y200.00 F18000

  G1 X150 F18000
  G1 Y150 F18000
  G1 X200 F18000
  G1 Y200.00 F18000

  G0 X125 Y175 F18000
  G1 X225 F18000
  G1 X125 F18000
  G1 X225 F18000
  G1 X125 F18000
  G1 X225 F18000
  G1 X125 F18000
  G1 X225 F18000
  G1 X125 F18000

  G0 X5 F18000
  G1 Y5 F18000
  G1 X345 F18000
  G1 Y345.00 F18000

  G1 X225 F18000
  G1 X125 F18000
  G1 X225 F18000
  G1 X125 F18000
  G1 X100 F18000
  G1 Y100 F18000
  G1 X250 F18000
  G1 Y250.00 F18000
  G0 X175 Y175 F5000





